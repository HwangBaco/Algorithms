package 알고리즘연습.boj;

import java.io.IOException;

public class BOJ_10971_외판원순회2 {
    public static void main(String[] args) throws IOException {
        /**
         * 문제 :
         * - 1번부터 n번의 도시 (2이상 10 이하)
         * - 각 도시 사이에 길이 있을수도, 없을수도
         * - 외판원이 한 도시에서 출발해 n개의 도시를 모두 거쳐 다시 원래의 도시로 돌아오는 순회 경로 계획
         * - 도시 중복 불가
         *
         * - 각 도시간 weight는 인접 행렬로 제공 (1백만 이하의 자연수)
         * - 단방향 행렬
         * - 최소 비용 계획
         */

        /**
         * 기본적으로 모든 노드는 최소 2개의 노드와 연결되어 있음
         *
         * 첫 번째 노드를 일단 하나 고르고,
         * 첫 번째 노드와 인접한 노드를 하나 고름.
         * 첫 번째 노드와 인접 노드를 제외한 다른 노드들의 순열을 고르는데, bfs로 진행하는데 모든 노드를 탐색해야 함.
         */

        
    }
}
